version: '3.4'

services:
  catalogdb:
    image: mongo

  cartdb: 
    image: redis:alpine

  discountdb:
    image: mysql

  orderdb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  userdb:
    image: postgres

  adminer:
    image: adminer

  portainer:
    image: portainer/portainer-ce

  rabbitmq:
    image: rabbitmq:3-management-alpine

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Microservices/Catalog/Catalog.API/Dockerfile
  
  cart.api:
    image: ${DOCKER_REGISTRY-}cartapi
    build:
      context: .
      dockerfile: Microservices/Cart/Cart.API/Dockerfile

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Microservices/Discount/Discount.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Microservices/Discount/Discount.Grpc/Dockerfile

  order.api:
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: .
      dockerfile: Microservices/Order/Order.API/Dockerfile

  user.api:
    image: ${DOCKER_REGISTRY-}userapi
    build:
      context: .
      dockerfile: Microservices/User/User.API/Dockerfile

  ocelotgateway:
    image: ${DOCKER_REGISTRY-}ocelotgateway
    build:
      context: .
      dockerfile: Gateways/OcelotGateway/Dockerfile

  shop.aggregator:
    image: ${DOCKER_REGISTRY-}shopaggregator
    build:
      context: .
      dockerfile: Gateways/Shop.Aggregator/Dockerfile

  # pour le front pr√©ciser path du context
  # web.client:
  #   build: 
  #     context: ./WebApp/web
  #     dockerfile: Dockerfile

volumes:
  mongo_data:
  portainer_data:
  adminer_data:
  postgres_data:







